Resolva as operações:
● 10 + 15 = 25 (number)
● "10" + 2 = "102" (string)
● "10" * 2 = 20 (number)
● "10" / 3 = 3.3333333333333335 (float)
● "10" % 3 = 1 (number)
● 10 + true = 11 (number)
● 10 == "10" = true (boolean)
● 10 === "10" = false (boolean)
● 10 < 11 = true (boolean)
● 10 > 12 = false (boolean)
● 10 <= 10.1 = true (boolean)
● 10 > 9.99 = true (boolean)
● 10 != "dez" = true (boolean)
● 10 + true = 11 (number)
● "dez" + true = "deztrue" (string)
● 10 + false = 10 (number)
● 10 * false = 0 (number)
● true + true = 2 (number)
● 10++ = 11 (number)
● 10-- = 9 (number)
● 1 & 1 = 1 (number)
● 1 & 0 = 0 (number)
● 0 & 0 = 0 (number)
● 0 / 1 = 0 (number)
● 5 + 5 == 10 = true (boolean)
● "5" + "5" == 10 = false (boolean)
● "5" * 2 > 9 = true (boolean)
● (10 + 10) * 2 = 40 (number)
● 10 + 10 * 2 = 30 (number)

2.
var branco = "preto";
var preto = "cinza";
var cinza = "branco";
var carro = "preto";
var valor = 3000;
var prestacao = 750;

a) branco == "branco" // false
b) branco == cinza // false
c) carro === branco // false
d) var cavalo = carro == "preto" ? "cinza" : "marron"; // cavalo = "cinza"
e) Quantas prestações são necessárias para pagar o valor do carro com uma entrada de 3.000? Demonstre a operação.
   Número de prestações = (valor - entrada) / prestacao
   Número de prestações = (3000 - 3000) / 750
   Número de prestações = 0 / 750
   Número de prestações = 0
   Portanto, nenhuma prestação é necessária, pois a entrada já cobre o valor total do carro.
f) Somando as variáveis de cores é formada uma string de quantos caracteres?
   Total de caracteres = branco.length + preto.length + cinza.length
                        = 5 + 5 + 6
                        = 16
   Portanto, a string formada tem 16 caracteres.
